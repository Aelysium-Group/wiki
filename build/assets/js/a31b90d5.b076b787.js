"use strict";(self.webpackChunkaelysium_wiki=self.webpackChunkaelysium_wiki||[]).push([[907],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,u=m["".concat(s,".").concat(f)]||m[f]||d[f]||o;return n?r.createElement(u,i(i({ref:t},p),{},{components:n})):r.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(4137));const o={title:"\ud83d\udcf2 Item References",sidebar_position:5},i=void 0,l={unversionedId:"rusty-connector/toolkit/references",id:"rusty-connector/toolkit/references",title:"\ud83d\udcf2 Item References",description:"Item References provide shorthand methods for fetching commonly searched for resources.",source:"@site/docs/rusty-connector/toolkit/references.md",sourceDirName:"rusty-connector/toolkit",slug:"/rusty-connector/toolkit/references",permalink:"/rusty-connector/toolkit/references",draft:!1,editUrl:"https://github.com/Aelysium-Group/wiki/docs/rusty-connector/toolkit/references.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"\ud83d\udcf2 Item References",sidebar_position:5},sidebar:"plugins_wiki_rusty_connector",previous:{title:"\ud83d\udce6 Packets",permalink:"/rusty-connector/toolkit/packets"},next:{title:"\ud83c\udfc6 Matchmaker API",permalink:"/rusty-connector/toolkit/ranked_families"}},s={},c=[{value:"Family",id:"family",level:2},{value:"MCLoader",id:"mcloader",level:2},{value:"Player",id:"player",level:2},{value:"UUID-based Reference",id:"uuid-based-reference",level:3},{value:"Username-based Reference",id:"username-based-reference",level:3},{value:"Exceptions",id:"exceptions",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Item References provide shorthand methods for fetching commonly searched for resources.\nUsing an Item Reference is as simple as calling the Reference constructor along with a specific identification key.\nThen when you're ready to fetch the Referenced item, you can use ",(0,a.kt)("inlineCode",{parentName:"p"},".get()"),"."),(0,a.kt)("p",null,"A difference between an Item Reference and something native to Java such as a ",(0,a.kt)("inlineCode",{parentName:"p"},"WeakReference")," is that a ",(0,a.kt)("inlineCode",{parentName:"p"},"WeakReference"),' references something that, at somepoint, already existed.\nAlternatively, an Item Reference is more like a "prebuilt search query". Whether or not the item actually exists isn\'t known until ',(0,a.kt)("inlineCode",{parentName:"p"},".get()")," is called."),(0,a.kt)("h2",{id:"family"},"Family"),(0,a.kt)("p",null,"Searches for a family based on the ID assigned to it in ",(0,a.kt)("inlineCode",{parentName:"p"},"families.yml"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Family family = new Family.Reference(familyID).get();\n")),(0,a.kt)("p",null,"Family References have an additional Override for the ",(0,a.kt)("inlineCode",{parentName:"p"},".get()")," method which allows for a boolean."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Behaves the same as .get();\nFamily family = new Family.Reference(familyID).get(false);\n\n// Will fetch the Root Family if the referenced family could not be found.\nFamily family = new Family.Reference(familyID).get(true);\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"Family.Reference")," is backed by HashMap and should have near-instant responses.")),(0,a.kt)("h2",{id:"mcloader"},"MCLoader"),(0,a.kt)("p",null,"Searches for an MCLoader with the specified ",(0,a.kt)("inlineCode",{parentName:"p"},"UUID"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"MCLoader mcLoader = new MCLoader.Reference(uuid).get();\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"MCLoader.Reference")," is backed by HashMap and should have near-instant responses.")),(0,a.kt)("h2",{id:"player"},"Player"),(0,a.kt)("h3",{id:"uuid-based-reference"},"UUID-based Reference"),(0,a.kt)("p",null,"Searches for a player based on their UUID."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Player player = new Player.Reference(UUID.randomUUID()).get();\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"Player.Reference")," is backed by a database-synced HashMap. Theoretically there should be near-instant responses, however, databases can be weird at times.")),(0,a.kt)("h3",{id:"username-based-reference"},"Username-based Reference"),(0,a.kt)("p",null,"Searches for a player based on their Username."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'String username = "Notch";\nPlayer player = new Player.UsernameReference(username).get();\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"Player.UsernameReference")," is backed by two Hash-Map references, one of them is backed by the database. Responses should be pretty fast but may be delayed.")),(0,a.kt)("h2",{id:"exceptions"},"Exceptions"),(0,a.kt)("p",null,"Item References will ",(0,a.kt)("strong",{parentName:"p"},"only")," ever return the item they're referencing.\nIf an Item Reference is unable to fetch the item, it will throw a ",(0,a.kt)("inlineCode",{parentName:"p"},"NoSuchElementException"),"."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"It should be noted that Item References make direct static calls to the RustyConnector Flame.\nMake sure you only ever use them inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"Tinder#onStart"),"!")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkaelysium_wiki=self.webpackChunkaelysium_wiki||[]).push([[458],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),y=o,d=u["".concat(c,".").concat(y)]||u[y]||m[y]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=y;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8887:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(4137));const i={title:"\ud83d\udedc Services",sidebar_position:2},a=void 0,s={unversionedId:"rusty-connector/toolkit/services",id:"rusty-connector/toolkit/services",title:"\ud83d\udedc Services",description:"Services are the framework that RustyConnector is based off of.",source:"@site/docs/rusty-connector/toolkit/services.md",sourceDirName:"rusty-connector/toolkit",slug:"/rusty-connector/toolkit/services",permalink:"/rusty-connector/toolkit/services",draft:!1,editUrl:"https://github.com/Aelysium-Group/wiki/docs/rusty-connector/toolkit/services.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"\ud83d\udedc Services",sidebar_position:2},sidebar:"plugins_wiki_rusty_connector",previous:{title:"\u2692\ufe0f Installation",permalink:"/rusty-connector/toolkit/installation"},next:{title:"\ud83c\udf9f\ufe0f Events",permalink:"/rusty-connector/toolkit/events"}},c={},l=[{value:"Accessing RustyConnector Services",id:"accessing-rustyconnector-services",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Services are the framework that RustyConnector is based off of.\nEvery process in RustyConnector is a Service.\nSometimes Services might contain sub-services."),(0,o.kt)("p",null,"Let's look at the Service interface quickly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public interface Service {\n    /**\n     * Kill the service.\n     * Every service is solely responsible for killing its own processes.\n     */\n    void kill();\n}\n")),(0,o.kt)("p",null,"Services all have a single common denominator, they can be stopped via the ",(0,o.kt)("inlineCode",{parentName:"p"},".kill()")," method.\nWhen ",(0,o.kt)("inlineCode",{parentName:"p"},".kill()")," is called on a Service, it is expected that not only the Service itself stops, but also all sub-processes of that service.\nWith this setup, we can simply call ",(0,o.kt)("inlineCode",{parentName:"p"},".kill()")," on the main plugin Service and the entire plugin will shut down!"),(0,o.kt)("h2",{id:"accessing-rustyconnector-services"},"Accessing RustyConnector Services"),(0,o.kt)("p",null,"The root RustyConnector Service is the Flame, which you access via Tinder.\nFrom there you can access the main Services associated with the Flame."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Proxy Plugin"',title:'"Proxy','Plugin"':!0},"VelocityTinder tinder = RustyConnector.Toolkit.proxy().orElseThrow();\n\ntinder.onStart(flame -> {\n    flame.services();\n});\n\ntinder.onStop(() -> {\n});\n")),(0,o.kt)("p",null,"Notice how we have to access Flame from within an ",(0,o.kt)("inlineCode",{parentName:"p"},".onStart()")," method? Flame itself is a Service, which means that it isn't guaranteed to be active.\nWhen we call ",(0,o.kt)("inlineCode",{parentName:"p"},".onStart()")," we know that we'll be able to access Flame once it's active. Alternatively ",(0,o.kt)("inlineCode",{parentName:"p"},".onStop()")," will run when ",(0,o.kt)("inlineCode",{parentName:"p"},".kill()")," is used on Flame."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"While building your RustyConnector Module; it's a good practice to write as much logic outside of ",(0,o.kt)("inlineCode",{parentName:"p"},".onStart()")," as you possibly can."),(0,o.kt)("p",{parentName:"admonition"},"You should only need ",(0,o.kt)("inlineCode",{parentName:"p"},".onStart()")," for RustyConnector specific functions such as registering Event Listeners.")))}m.isMDXComponent=!0}}]);
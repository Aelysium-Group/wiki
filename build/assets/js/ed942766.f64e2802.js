"use strict";(self.webpackChunkaelysium_wiki=self.webpackChunkaelysium_wiki||[]).push([[779],{4137:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,y=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return t?r.createElement(y,s(s({ref:n},c),{},{components:t})):r.createElement(y,s({ref:n},c))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8249:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(7462),o=(t(7294),t(4137));const a={title:"\ud83d\udccc Permissions",description:"RustyConnector Permission Commands",sidebar_position:3,displayed_sidebar:"plugins_wiki_rusty_connector"},s=void 0,i={unversionedId:"rusty-connector/docs/permissions",id:"rusty-connector/docs/permissions",title:"\ud83d\udccc Permissions",description:"RustyConnector Permission Commands",source:"@site/docs/rusty-connector/docs/permissions.md",sourceDirName:"rusty-connector/docs",slug:"/rusty-connector/docs/permissions",permalink:"/rusty-connector/docs/permissions",draft:!1,editUrl:"https://github.com/Aelysium-Group/wiki/docs/rusty-connector/docs/permissions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\ud83d\udccc Permissions",description:"RustyConnector Permission Commands",sidebar_position:3,displayed_sidebar:"plugins_wiki_rusty_connector"},sidebar:"plugins_wiki_rusty_connector",previous:{title:"\u2699\ufe0f Commands",permalink:"/rusty-connector/docs/commands"},next:{title:"\u2601\ufe0f Families",permalink:"/rusty-connector/docs/concepts/families/"}},l={},p=[{value:"Whitelist",id:"whitelist",level:2},{value:"Player Limits",id:"player-limits",level:2},{value:"Commands",id:"commands",level:2}],c={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Any permission can have the wildcard ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," added to the end to allow all sub-permission of that node."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.*")," | Bypass all permission checks. Full permission."),(0,o.kt)("h2",{id:"whitelist"},"Whitelist"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.whitelist.*")," | Bypass all RC-Velocity whitelists."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.whitelist.<whitelist name>")," | Bypass a specific RC-Velocity whitelist."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," Whitelist permissions only bypass whitelists that have ",(0,o.kt)("inlineCode",{parentName:"p"},"use-permission")," set to true. Whitelist permission do not bypass server-specific whitelists."),(0,o.kt)("h2",{id:"player-limits"},"Player Limits"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.<family name>.*")," | Bypass the hard and soft caps of a specific family."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.softCapBypass")," | Bypass the soft-cap of any RC-Paper server."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.<family name>.softCapBypass")," | Bypass the soft-cap of any RC-Paper server inside of a specific family."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.hardCapBypass")," | Bypass the hard-cap of any RC-Paper server."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.<family name>.hardCapBypass")," | Bypass the hard-cap of any RC-Paper server inside of a specific family."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," The hard cap bypass permissions will automatically bypass soft-cap as well."),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)("p",null,"Unless otherwise stated; all commands must be sent from the console. There's no need for command permissions."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.*")," | Allows a player to use all player-facing commands."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.tpa")," | Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/tpa")," command where it's enabled."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.party")," | Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/party")," command where it's enabled."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.friends")," | Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/friends")," command where it's enabled."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.unfriend")," Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/unfriend")," command where it's enabled."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.hub")," | Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/hub")," command where it's enabled."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.anchor.<anchor name>")," | Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/<anchor name>")," command where it's enabled. Anchors are a part of the dynamic teleport module and the name of the command is configurable."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.anchor")," | Allows a player to use any anchor command where it's enabled. Anchors are a part of the dynamic teleport module and the name of the command is configurable. This permission is equivalent to ",(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.anchor.*")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rustyconnector.command.tpa")," | Allows a player to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/tpa")," command where it's enabled."))}d.isMDXComponent=!0}}]);
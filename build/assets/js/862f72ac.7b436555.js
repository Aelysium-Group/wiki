"use strict";(self.webpackChunkaelysium_wiki=self.webpackChunkaelysium_wiki||[]).push([[196],{4137:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>y});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,y=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return a?n.createElement(y,i(i({ref:t},d),{},{components:a})):n.createElement(y,i({ref:t},d))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6792:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>b,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(4137));const o={title:"\ud83c\udf27\ufe0f Scalar Family",sidebar_position:1},i=void 0,l={unversionedId:"rusty-connector/docs/concepts/families/scalar",id:"rusty-connector/docs/concepts/families/scalar",title:"\ud83c\udf27\ufe0f Scalar Family",description:"Scalar Families are optimized to work best with stateless Minecraft Loaders.",source:"@site/docs/rusty-connector/docs/concepts/families/scalar.mdx",sourceDirName:"rusty-connector/docs/concepts/families",slug:"/rusty-connector/docs/concepts/families/scalar",permalink:"/rusty-connector/docs/concepts/families/scalar",draft:!1,editUrl:"https://github.com/Aelysium-Group/wiki/docs/rusty-connector/docs/concepts/families/scalar.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"\ud83c\udf27\ufe0f Scalar Family",sidebar_position:1},sidebar:"plugins_wiki_rusty_connector",previous:{title:"\u2601\ufe0f Families",permalink:"/rusty-connector/docs/concepts/families/"},next:{title:"\ud83c\udf29\ufe0f Static Family",permalink:"/rusty-connector/docs/concepts/families/static"}},s={},c=[{value:"\u2601\ufe0f Cloud Angle",id:"\ufe0f-cloud-angle",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Parent Family",id:"parent-family",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},p=d("MCLoaderTag"),u=d("DynamicTag"),m=d("TheLawTag"),y=d("Menu"),f=d("MenuItem"),h={toc:c},g="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(g,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Scalar Families are optimized to work best with stateless ",(0,r.kt)(p,{mdxType:"MCLoaderTag"},"Minecraft Loaders"),"."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"What is a Stateless Minecraft Loader?"),(0,r.kt)("p",null,"A stateless ",(0,r.kt)(p,{mdxType:"MCLoaderTag"},"Minecraft Loader")," is a Loader which doesn't store it's own state.",(0,r.kt)("br",null),(0,r.kt)("br",null),"For example, if a player joins a Loader and places a block. That action will be forgotten next time the Loader restarts. Ideally, stateless Loaders wouldn't actually allow players to do anything that would attempt alter state (For example, by using ",(0,r.kt)("a",{href:"https://enginehub.org/worldguard"},"WorldGuard")," to prevent players from placing blocks).",(0,r.kt)("br",null),(0,r.kt)("br",null),"Examples of stateless Loaders would be Lobby, KitPVP, or Bedwars.",(0,r.kt)("br",null),(0,r.kt)("br",null),"The inverse of a stateless Loader is a stateful Loader; such as a Survival Loader, or Plots Loeader.")),(0,r.kt)("h2",{id:"\ufe0f-cloud-angle"},"\u2601\ufe0f Cloud Angle"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"What is this?"),(0,r.kt)("p",null,"Cloud angles provide explanations of family opperations through the usage of analogies.")),(0,r.kt)("p",null,"Scalar Families can be thought of as a \ud83c\udf27\ufe0f Rain Cloud over the ocean; where a single raindrop is the player, and the ocean is the collection of ",(0,r.kt)(p,{mdxType:"MCLoaderTag"},"Loaders")," contained in the family."),(0,r.kt)("p",null,"When a player enters the family's ",(0,r.kt)(u,{href:"concepts/load_balancing",emoji:"\u2935\ufe0f",name:"Load Balancer",title:"A link to a page for Load Balancers",mdxType:"DynamicTag"})," it's represented by the raindrop falling through the air into the ocean.",(0,r.kt)("br",null),"\nAll Loaders in a scalar family should theoretically be stateless and completly identical (in accordance with ",(0,r.kt)(m,{mdxType:"TheLawTag"},"The Rule of Families"),"). As such, regardless of where in the ocean the raindrop lands, it will still end up in the ocean."),(0,r.kt)("p",null,"Ultimatly, when a player connects to a Scalar Family, it doesn't matter which Loader they connect to, it will always seem like they've connected to the same Loader."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Scalar families can be configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"families")," folder. They are represented by a configuration file containing the family's name followed by the suffix ",(0,r.kt)("inlineCode",{parentName:"p"},".scalar.yml"),"."),(0,r.kt)("h3",{id:"parent-family"},"Parent Family"),(0,r.kt)("p",null,"Parenting allows you to establish hierarchies between your families."),(0,r.kt)("p",null,"When you setup family parents, players will be connected to a family's parent if they are kicked or disconnected from their current family.\nIf a parent family isn't established, the player will be connected to the root family."),(0,r.kt)("p",null,"If you setup the hub feature in Dynamic Teleport, it will also direct a player to the parent family of the one they're connected to. "),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Setting a parent family for the root familly is forbidden and will be ignored.")),(0,r.kt)(y,{mdxType:"Menu"},(0,r.kt)(f,{href:"concepts/load_balancing",title:"\u2935\ufe0f Load Balancing",description:"Read up more on Load Balancing in RC.",mdxType:"MenuItem"}),(0,r.kt)(f,{href:"concepts/whitelist",title:"\ud83d\udc6e Whitelist",description:"Read up more on Whitelists in RC.",mdxType:"MenuItem"})))}b.isMDXComponent=!0}}]);
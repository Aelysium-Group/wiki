"use strict";(self.webpackChunkaelysium_wiki=self.webpackChunkaelysium_wiki||[]).push([[822],{4137:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>y});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(i),d=r,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return i?n.createElement(y,o(o({ref:t},p),{},{components:i})):n.createElement(y,o({ref:t},p))}));function y(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=i.length,o=new Array(l);o[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[u]="string"==typeof e?e:r,o[1]=a;for(var c=2;c<l;c++)o[c]=i[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},5699:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var n=i(7462),r=(i(7294),i(4137));const l={title:"\ud83d\udc6e Whitelist",sidebar_position:3},o=void 0,a={unversionedId:"rusty-connector/docs/concepts/whitelist",id:"rusty-connector/docs/concepts/whitelist",title:"\ud83d\udc6e Whitelist",description:"RustyConnector allows you to set whitelists for both your entire network and specific families!",source:"@site/docs/rusty-connector/docs/concepts/whitelist.md",sourceDirName:"rusty-connector/docs/concepts",slug:"/rusty-connector/docs/concepts/whitelist",permalink:"/rusty-connector/docs/concepts/whitelist",draft:!1,editUrl:"https://github.com/Aelysium-Group/wiki/docs/rusty-connector/docs/concepts/whitelist.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\ud83d\udc6e Whitelist",sidebar_position:3},sidebar:"plugins_wiki_rusty_connector",previous:{title:"\ud83c\udf28\ufe0f Ranked Family",permalink:"/rusty-connector/docs/concepts/families/ranked"},next:{title:"\ud83d\udd16 Discord Webhooks",permalink:"/rusty-connector/docs/concepts/discord-webhooks"}},s={},c=[],p={toc:c},u="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"RustyConnector allows you to set whitelists for both your entire network and specific families!"),(0,r.kt)("p",null,"With RustyConnector whitelists, you can create as many pre-defined whitelists as you like. Switching between these whitelists is as easy as changing the name of the whitelist in your configs."),(0,r.kt)("h1",{id:"network-wide-whitelists"},"Network Wide Whitelists"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In config.yml on RC-Velocity, go to the ",(0,r.kt)("inlineCode",{parentName:"li"},"whitelist")," section."),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"enabled")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},"Change the whitelist ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," to whatever you'd like (For this example, we'll call it ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-whitelist"),")"),(0,r.kt)("li",{parentName:"ul"},"Restart your Velocity server"),(0,r.kt)("li",{parentName:"ul"},"RC-Velocity will create a new file called ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-whitelist.yml")," inside of your ",(0,r.kt)("inlineCode",{parentName:"li"},"whitelists")," folder. This file is loaded with the whitelist.yml template."),(0,r.kt)("li",{parentName:"ul"},"Open ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-whitelist.yml")),(0,r.kt)("li",{parentName:"ul"},"Configure ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-whitelist.yml")," however you'd like."),(0,r.kt)("li",{parentName:"ul"},"Restart RC-Velocity")),(0,r.kt)("h1",{id:"family-wide-whitelists"},"Family Wide Whitelists"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In the ",(0,r.kt)("inlineCode",{parentName:"li"},"families")," folder. Open any particular family.yml"),(0,r.kt)("li",{parentName:"ul"},"Go to the ",(0,r.kt)("inlineCode",{parentName:"li"},"whitelist")," section of your family.yml"),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"enabled")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")),(0,r.kt)("li",{parentName:"ul"},"Change the whitelist ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," to whatever you'd like (For this example, we'll call it ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-family-whitelist"),")"),(0,r.kt)("li",{parentName:"ul"},"Restart your Velocity server"),(0,r.kt)("li",{parentName:"ul"},"RC-Velocity will create a new file called ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-family-whitelist.yml")," inside of your ",(0,r.kt)("inlineCode",{parentName:"li"},"whitelists")," folder. This file is loaded with the whitelist.yml template."),(0,r.kt)("li",{parentName:"ul"},"Open ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-family-whitelist.yml")),(0,r.kt)("li",{parentName:"ul"},"Configure ",(0,r.kt)("inlineCode",{parentName:"li"},"dev-family-whitelist.yml")," however you'd like."),(0,r.kt)("li",{parentName:"ul"},"Restart RC-Velocity")),(0,r.kt)("h1",{id:"server-specific-whitelists"},"Server-Specific Whitelists"),(0,r.kt)("p",null,"RustyConnector doesn't have a custom implementation for Loader-specific whitelists. Instead, use your MCLoader's built-in whitelist system via the ",(0,r.kt)("inlineCode",{parentName:"p"},"/whitelist")," command."))}m.isMDXComponent=!0}}]);
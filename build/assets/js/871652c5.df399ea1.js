"use strict";(self.webpackChunkaelysium_wiki=self.webpackChunkaelysium_wiki||[]).push([[404],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7009:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(4137));const a={title:"\u2699\ufe0f Commands",description:"RustyConnector Commands",sidebar_position:3,displayed_sidebar:"plugins_wiki_rusty_connector"},i=void 0,s={unversionedId:"rusty-connector/docs/commands",id:"rusty-connector/docs/commands",title:"\u2699\ufe0f Commands",description:"RustyConnector Commands",source:"@site/docs/rusty-connector/docs/commands.md",sourceDirName:"rusty-connector/docs",slug:"/rusty-connector/docs/commands",permalink:"/rusty-connector/docs/commands",draft:!1,editUrl:"https://github.com/Aelysium-Group/wiki/docs/rusty-connector/docs/commands.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"\u2699\ufe0f Commands",description:"RustyConnector Commands",sidebar_position:3,displayed_sidebar:"plugins_wiki_rusty_connector"},sidebar:"plugins_wiki_rusty_connector",previous:{title:"\ud83d\udcdc The Law",permalink:"/rusty-connector/docs/the_law"},next:{title:"\ud83d\udccc Permissions",permalink:"/rusty-connector/docs/permissions"}},l={},c=[{value:"NOTE: Because of an unknown bug, all MCLoader commands must be executed using the plugin prefix: <code>rustyconnector-paper:rc</code> instead of just <code>rc</code>.",id:"note-because-of-an-unknown-bug-all-mcloader-commands-must-be-executed-using-the-plugin-prefix-rustyconnector-paperrc-instead-of-just-rc",level:3}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Commands marked with an asterisk ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," are player useable. Otherwise, all commands are only allowed to be used from the console.\nIf you want to allow players to use some commands, use a plugin like EssentialsX or CMI to make a command alias."),(0,o.kt)("h1",{id:"proxy-commands"},"Proxy Commands"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc family")," | View all registered families."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc family <family name>")," | View information about a specific family."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc family <family name> sort")," | Tell the family to completely resort itself in accordance with its load-balancing algorithm."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc family <family name> resetIndex")," | Reset the family's insertion point to the first server in the family queue."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc message get <message ID>")," | View a specific message."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc message list")," | View recent messages that have been processed."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc register all")," | Send a request for all servers to register themselves."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc register family <family name>")," | Send a request for all servers in a specific family to register themselves."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc reload")," | Shows different reload options for you to try."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc send <username> <family name>")," | Sends a player to a specific family."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rc send server <username> <server name>")," | Sends a player to a specific server (ignores family load balancer, whitelist, and server soft/hard caps)"),(0,o.kt)("p",null,"*",(0,o.kt)("inlineCode",{parentName:"p"},"/tpa")," | Teleport to another player within the family. (Works across servers within that family.)"),(0,o.kt)("p",null,"*",(0,o.kt)("inlineCode",{parentName:"p"},"/hub")," | Teleport a family's parent family."),(0,o.kt)("h1",{id:"mcloader-commands"},"MCLoader Commands"),(0,o.kt)("h3",{id:"note-because-of-an-unknown-bug-all-mcloader-commands-must-be-executed-using-the-plugin-prefix-rustyconnector-paperrc-instead-of-just-rc"},"NOTE: Because of an unknown bug, all MCLoader commands must be executed using the plugin prefix: ",(0,o.kt)("inlineCode",{parentName:"h3"},"rustyconnector-paper:rc")," instead of just ",(0,o.kt)("inlineCode",{parentName:"h3"},"rc"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rustyconnector-paper:rc send <username> <family name>")," | Sends a player to a specific family."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rustyconnector-paper:rc register")," | Attempts to register the server to the proxy."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rustyconnector-paper:rc unregister")," | Attempts to unregister the server from the proxy."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rustyconnector-paper:rc lock")," | Locks this MCLoader, preventing players from connecting to it without specifically being sent to it by the Proxy."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/rustyconnector-paper:rc unlock")," | Unlocks this MCLoader, allowing players to connect to it via it's family."))}u.isMDXComponent=!0}}]);
import{_ as e,c as o,a1 as i,o as d}from"./chunks/framework.C7abYapc.js";const m=JSON.parse('{"title":"ðŸŒŠ Liquid Timestamp","description":"","frontmatter":{"title":"ðŸŒŠ Liquid Timestamp"},"headers":[],"relativePath":"fr/rusty-connector/docs/concepts/liquid-timestamps.md","filePath":"fr/rusty-connector/docs/concepts/liquid-timestamps.md"}'),s={name:"fr/rusty-connector/docs/concepts/liquid-timestamps.md"};function a(u,t,n,r,c,l){return d(),o("div",null,t[0]||(t[0]=[i('<p>While working with RustyConnector configurations. You may encounter a liquid timestamp. These data types allow you to define a string value which will be translated into a unit of time.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">â€‹</a></h2><p>Liquid Timestamps use the following syntax:</p><p><code>&lt;amount&gt;&lt;unit&gt;</code> || <code>&lt;amount&gt; &lt;unit&gt;</code></p><p><code>amount</code> should be the number of units that you want to set. <code>unit</code> should be the <a href="#supported-time-units">time unit</a> that you want to use.</p><h2 id="supported-time-units" tabindex="-1">Supported Time Units <a class="header-anchor" href="#supported-time-units" aria-label="Permalink to &quot;Supported Time Units&quot;">â€‹</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>ID Key</th><th>Description</th></tr></thead><tbody><tr><td><code>Second</code></td><td><code>s</code></td><td>Unit of time representing a second. The plural &quot;Seconds&quot; is also supported.</td></tr><tr><td><code>Minute</code></td><td><code>m</code></td><td>Unit of time representing a minute. The plural &quot;Minutes&quot; is also supported.</td></tr><tr><td><code>Hour</code></td><td><code>h</code></td><td>Unit of time representing a n hour. The plural &quot;Hours&quot; is also supported.</td></tr><tr><td><code>Day</code></td><td><code>d</code></td><td>Unit of time representing a day. The plural &quot;Days&quot; is also supported.</td></tr></tbody></table><p>All time units are case insensitive.</p><p>The time formats don&#39;t care if you:</p><ul><li>Use shorthand versions (&quot;d&quot; instead of &quot;day&quot;)</li><li>Use plurals (&quot;Day&quot; versus &quot;Days&quot;)</li><li>Use caps (&quot;day&quot; versus &quot;DAY&quot;)</li><li>Use whitespaces (&quot;1d&quot; versus &quot;1 d&quot;)</li></ul><div class="info custom-block"><p class="custom-block-title">Examples</p><ul><li><code>30 Minutes</code></li><li><code>2d</code></li><li><code>1 hour</code></li><li><code>17HOURS</code></li><li><code>11days</code></li><li><code>18 m</code></li></ul></div>',11)]))}const h=e(s,[["render",a]]);export{m as __pageData,h as default};
